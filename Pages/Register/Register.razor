@page "/register"
@layout EmptyLayout
@inject ApiService service
@inject NavigationManager manager

<PageTitle>Login</PageTitle>

<div class="parent">
    <div class="auth-content">
        <div class="form-content">
            <form>
                <EditForm Model="@Model" OnValidSubmit="Submit" FormName="Login">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <p>
                        <InputText class="form-input remove-border.modified.valid" required placeholder="Логин"
                            @bind-value="Model.Username" />
                    </p>
                    <p>
                        <InputText class="form-input remove-border.modified.valid" required type='password'
                            placeholder="Пароль" @bind-value="Model.Password" />
                    </p>
                    <button type="submit" class="button-form">Зарегистрироваться</button>
                </EditForm>
            </form>
            <a href="/login">У меня есть аккаунт</a>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private UserRequest? Model { get; set; }

    protected override void OnInitialized()
    {
        Model = new UserRequest();
    }

    private async void Submit()
    {
        StateHasChanged();
        if (await service.Register(Model))
            manager.NavigateTo("/login");
    }
}

<style>
    .remove-border.modified.valid {
        outline: none;
    }

    .form-input {
        box-sizing: border-box;
        padding-left: 15px;
        font-family: inherit;
        background-color: rgb(255, 255, 255);
        color: black;
        height: 50px;
        border: none;
        border-radius: 10px;
        transition: 0.2s linear;
        border: 2px solid rgb(63, 56, 56);
    }
</style>