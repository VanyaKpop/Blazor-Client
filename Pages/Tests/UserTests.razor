@page "/usertests"

@inject ApiService service
@inject AppStateService appState
@inject NavigationManager manager


<div class="tests">
    <div class="header">
        <a @onclick="CreateTest" class="button">Создать тест</a>
    </div>
    <div class="body">
        @if (tests.Count >= 1)
            {
                foreach (var item in tests)
                {
                    <div class="tests__info box-shadow" @onclick="@( () => TestPassing(item))">
                        <p class="tests__info__body">
                            Тест @item.Name
                        </p>
                        <p class="tests__info__footer">
                            Автор: @item.Author
                        </p>
                    </div>
                
                }
            }
    </div>
</div>

@code {
    private List<Test?> tests = new List<Test?>();
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender){
            if (await service.IsTokenDoesntExist())
                manager.NavigateTo("/login");
            else {
                tests = await service.GetUserTestsAsync();
                StateHasChanged();
            }
        }
    }

    private void CreateTest()
    {
        appState.DeleteSavedCacheTest();
        manager.NavigateTo("/createtest");
    }

    private void TestPassing(Test test){
        appState.Test = test;
        appState.SaveTestAsync(test);
        manager.NavigateTo("/testPassing");
    }
}