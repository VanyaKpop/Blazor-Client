@page "/login"
@layout EmptyLayout
@inject ApiService service
@inject AppStateService appState
@inject NavigationManager manager

<PageTitle>Login</PageTitle>

<div class="parent">
    <div class="auth-content">
        <div class="form-content">
            <EditForm Model="@Model" OnValidSubmit="Submit" FormName="Login">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <p>
                    <InputText class="form-input remove-border.modified.valid" placeholder="Логин"
                        @bind-value="Model.Username" />
                </p>
                <p>
                    <InputText class="form-input remove-border.modified.valid" type='password'
                        placeholder="Пароль" @bind-value="Model.Password" />
                </p>
                <button type="submit" class="button">Логин</button>
            </EditForm>
            <a href="/register">У меня нет аккаунта</a>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private UserRequest? Model { get; set; }

    protected override void OnInitialized()
    {
        Model = new UserRequest();
    }

    private async void Submit()
    {
        if (await service.Login(Model.Username, Model.Password))
        {
            appState.LoggedIn = true;
            manager.NavigateTo("/");
        }

    }
}

@* 
	css isolation doesn't work for blazor components or Tag Helpers. use <style> instead
*@


<style>

    .form-input {
        box-sizing: border-box;
        padding-left: 15px;
        font-family: inherit;
        background-color: rgb(255, 255, 255);
        color: black;
        height: 50px;
        outline: none;
        border: none;
        border-radius: 10px;
        transition: 0.2s linear;
        border: 2px solid rgb(63, 56, 56);
        width: 100%;
    }
</style>